---
export interface Props extends astroHTML.JSX.AnchorHTMLAttributes {
  isExternal?: boolean;
}

const { href, class: className, isExternal, ...props } = Astro.props;
const { pathname } = Astro.url;
const isActive = href === pathname || href === pathname.replace(/\/$/, "");
---

<a href={href} class:list={[className, { active: isActive }]} {...props}>
  <slot />
  {
    isExternal && (
      <svg id="icon-share" viewBox="0 0 32 32">
        <path d="M8 20c0 0 1.838-6 12-6v6l12-8-12-8v6c-8 0-12 4.99-12 10zM22 24h-18v-12h3.934c0.315-0.372 0.654-0.729 1.015-1.068 1.374-1.287 3.018-2.27 4.879-2.932h-13.827v20h26v-8.395l-4 2.667v1.728z" />
      </svg>
    )
  }
</a>
<style>
  a {
    --padding: 2px 8px;
    --active: rgb(255, 216, 98);
    --hover: rgb(218, 218, 218);

    display: inline-block;
    text-decoration: none;
    padding: var(--padding);
    border-radius: 8px;
    background-color: transparent;
  }

  a.active {
    background-color: var(--active);
    padding: var(--padding);
    border-radius: 8px;
  }

  a:hover:not(.active) {
    background-color: var(--hover);
  }
</style>
