<button type="button" aria-label="toggle darkmode"></button>

<script>
  let darkModeSetting = localStorage.getItem("darkMode");
  const sun = `<svg class="sun" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" width="24px" height="24px" stroke="var(--foreground)" stroke-width="2">
  <path stroke-linecap="round" stroke-linejoin="round" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"></path>
</svg>`;

  const moon = `<svg class="moon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" width="24px" height="24px" stroke="var(--foreground)" stroke-width="2">
  <path stroke-linecap="round" stroke-linejoin="round" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"></path>
</svg>`;

  const button = document.querySelector("button");
  const enableDarkMode = () => {
    document.body.classList.add("darkmode");
    button.innerHTML = moon;
    localStorage.setItem("darkMode", "enabled");
  };

  const disableDarkMode = () => {
    document.body.classList.remove("darkmode");
    button.innerHTML = sun;
    localStorage.removeItem("darkMode");
  };
  if (darkModeSetting === "enabled") {
    enableDarkMode();
  } else {
    disableDarkMode();
  }

  button.addEventListener("click", () => {
    const darkModeSetting = localStorage.getItem("darkMode");
    if (darkModeSetting !== "enabled") {
      enableDarkMode();
    } else {
      disableDarkMode();
    }
  });
</script>

<style>
  :root {
    --translate: translateX(-56px) translateY(40px);
  }
  button {
    all: unset;
    display: flex;
    align-items: center;
    justify-content: center;
    align-self: center;

    border-width: 2px;
    border-style: solid;
    border-color: var(--foreground--muted);
    border-radius: 100%;
    height: 32px;
    width: 32px;
    transition: transform 200ms cubic-bezier(0.075, 0.82, 0.165, 1);
    transform: var(--translate);
  }

  button:focus {
    border-width: 2px;
    border-style: solid;
    border-color: var(--accent);
  }

  button:hover {
    transform: var(--translate) scale(1.1);
  }

  button:active {
    transform: var(--translate) scale(1) rotate(360deg);
  }

  @media screen and (max-width: 435px) {
    :root {
      --translate: translateX(78vw) translateY(-32px);
    }
  }

  @media screen and (max-width: 365px) {
    :root {
      --translate: translateX(300px) translateY(-32px);
    }
  }
</style>
